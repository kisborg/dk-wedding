@use '../../../app/styles/colors' as colors;
@import '../../../app/styles/breakpoints';

.button {
  display: flex;
  height: 100%;
  user-select: none;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
  white-space: nowrap;
  border-radius: 0.5rem;
  border-style: none;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 20px;
  font-family: 'nickainley';
  line-height: 1.5rem;
  color: colors.$blueberry-blue;
  text-decoration-line: none;
  outline-width: 2px;
  outline-offset: 2px;
  background-color: hsla(0, 0%, 100%, 0);
  box-shadow:
    inset 0 0 0 1px var(--border),
    inset 0 2px 0 var(--highlight),
    inset 0 -1px 0 var(--shadow),
    0 1px 1px var(--shadow);
  font-weight: 500;

  @include tablet {
    font-size: 16px;

    @include mobile {
      font-size: 12px;
    }
  }
}

.button:hover {
  cursor: pointer;
}

.button[aria-disabled='true'] {
  opacity: 0.5;
}

.button[data-focus-visible] {
  outline-style: solid;
}

.button:active,
.button[data-active] {
  padding-top: 0.125rem;
  box-shadow:
    inset 0 0 0 1px var(--border),
    inset 0 2px 0 var(--border);
}

@media (min-width: 640px) {
  .button {
    gap: 0.5rem;
  }
}

:is(:where(.dark) .button) {
  background-color: hsl(204 20% 100% / 0.05);
  color: hsl(204 20% 100%);
  --shadow: rgba(0, 0, 0, 0.25);
  --border: rgba(255, 255, 255, 0.1);
  --highlight: rgba(255, 255, 255, 0.05);
  box-shadow:
    inset 0 0 0 1px var(--border),
    inset 0 -1px 0 1px var(--shadow),
    inset 0 1px 0 var(--highlight);
}

:is(:where(.dark) .button:hover) {
  background-color: hsl(204 20% 100% / 0.1);
}

:is(:where(.dark) .button)[aria-expanded='true'] {
  background-color: hsl(204 20% 100% / 0.1);
}

:is(:where(.dark) .button:active),
:is(:where(.dark) .button[data-active]) {
  box-shadow:
    inset 0 0 0 1px var(--border),
    inset 0 1px 1px 1px var(--shadow);
}

.menu {
  position: relative;
  z-index: 50;
  display: flex;
  min-width: 180px;
  flex-direction: column;
  overscroll-behavior: contain;
  border-radius: 0.5rem;
  border-width: 1px;
  border-style: solid;
  border-color: hsl(204 20% 88%);
  background-color: hsl(204 20% 100%);
  padding: 0.5rem;
  color: hsl(204 10% 10%);
  box-shadow:
    0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
  outline: none !important;
  max-height: max-content;
  overflow: visible;
  --menu-origin-inline: calc(var(--popover-anchor-width) / 2);
}

:is(:where(.dark) .menu) {
  border-color: hsl(204 3% 26%);
  background-color: hsl(204 3% 18%);
  color: hsl(204 20% 100%);
  box-shadow:
    0 10px 15px -3px rgb(0 0 0 / 0.25),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
}

.menu-item {
  display: flex;
  cursor: default;
  scroll-margin: 0.5rem;
  align-items: center;
  gap: 0.5rem;
  border-radius: 0.25rem;
  padding: 0.5rem;
  outline: none !important;
  font-family: 'nickainley';
}

.menu-item[aria-disabled='true'] {
  opacity: 0.25;
  color: hsl(204 10% 10% / 0.3);
}

.menu-item[data-active-item] {
  background-color: hsl(204 100% 40%);
  color: hsl(204 20% 100%);
}

.menu-item:active,
.menu-item[data-active] {
  background-color: hsl(204 100% 32%);
  padding-top: 9px;
  padding-bottom: 7px;
}

.menu[data-placement^='bottom'] {
  transform-origin: var(--menu-origin-inline) -11px;
}

.menu[data-placement^='top'] {
  transform-origin: var(--menu-origin-inline) calc(100% + 11px);
}

.menu-arrow > svg {
  fill: hsl(204 20% 100%);
  stroke: hsl(204 20% 88%);
}

:is(:where(.dark) .menu-arrow) > svg {
  fill: hsl(204 3% 18%);
  stroke: hsl(204 3% 26%);
}

:is(:where(.dark) .menu-item[aria-disabled='true']) {
  color: hsl(204 20% 100% / 0.3);
}
